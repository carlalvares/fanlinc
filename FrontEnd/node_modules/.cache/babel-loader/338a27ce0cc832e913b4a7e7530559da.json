{"ast":null,"code":"var _jsxFileName = \"/Users/abeldeb/Documents/utsc/cscc01/project-team-rocket/FrontEnd/src/Register.js\";\nimport React from 'react';\nimport useForm from './useForm';\nimport { Copyright, theme, useStyles } from './registerStyle';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Fanlinclogo from './img/fanlinc_logo.png';\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  username: \"\",\n  password: \"\",\n  password_confirmation: \"\",\n  dateOfBirth: \"\",\n  bio: \"\",\n  location: \"\",\n  profilePhotoUrl: \"\"\n};\nconst addUserURL = \"http://localhost:8080/account/addUser\";\nexport default function Register() {\n  const _useForm = useForm(submit, initialState),\n        values = _useForm.values,\n        handleChange = _useForm.handleChange,\n        handleSubmit = _useForm.handleSubmit;\n  /**\n   * Handles the clicking of the submit button and sends a post request to the url:\n   * http://localhost:8080/account/addUser\n   */\n\n\n  function submit() {\n    const firstName = values.firstName,\n          lastName = values.lastName,\n          password = values.password,\n          password_confirmation = values.password_confirmation,\n          username = values.username,\n          dateOfBirth = values.dateOfBirth,\n          bio = values.bio,\n          location = values.location,\n          profilePhotoUrl = values.profilePhotoUrl;\n\n    if (password !== password_confirmation) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    fetch(addUserURL, {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'text/plain',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"password\": password,\n        \"username\": username,\n        \"dateOfBirth\": dateOfBirth,\n        \"bio\": bio,\n        \"location\": location,\n        \"profilePhotoUrl\": profilePhotoUrl\n      })\n    }).then(response => {\n      console.log(\"registration response:\", response);\n\n      switch (response.status) {\n        case 200:\n          alert(\"Profile Created!\");\n          break;\n\n        case 409:\n          alert(\"User with that username already exists.\");\n          break;\n\n        default:\n          alert(\"Something went wrong creating the user.\");\n      }\n    }).catch(err => {\n      alert(\"Error sending the request. \", err);\n    });\n  }\n\n  const classes = useStyles();\n  return React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    component: \"main\",\n    className: classes.root,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: \"center\"\n    },\n    component: Paper,\n    elevation: 0,\n    square: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Fanlinclogo,\n    height: \"70\",\n    width: \"70\",\n    alt: \"Fanlinc logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Sign Up!\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: \"First Name\",\n    name: \"firstName\",\n    value: values.firstName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: \"Last Name\",\n    name: \"lastName\",\n    value: values.lastName,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"username\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: \"Confirm Password\",\n    name: \"password_confirmation\",\n    type: \"password\",\n    value: values.password_confirmation,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    className: classes.submit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"#\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Have an account? Login\"))), React.createElement(Box, {\n    mt: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Copyright, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/Users/abeldeb/Documents/utsc/cscc01/project-team-rocket/FrontEnd/src/Register.js"],"names":["React","useForm","Copyright","theme","useStyles","Button","CssBaseline","TextField","Link","Paper","Box","Grid","Typography","ThemeProvider","Fanlinclogo","initialState","firstName","lastName","username","password","password_confirmation","dateOfBirth","bio","location","profilePhotoUrl","addUserURL","Register","submit","values","handleChange","handleSubmit","alert","fetch","method","mode","headers","body","JSON","stringify","then","response","console","log","status","catch","err","classes","root","textAlign","paper","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useForm from './useForm';\nimport { Copyright, theme, useStyles } from './registerStyle';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Fanlinclogo from './img/fanlinc_logo.png';\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  username: \"\",\n  password: \"\",\n  password_confirmation: \"\",\n  dateOfBirth: \"\",\n  bio: \"\",\n  location: \"\",\n  profilePhotoUrl: \"\"\n};\n\nconst addUserURL = \"http://localhost:8080/account/addUser\";\n\nexport default function Register() {\n  const { values, handleChange, handleSubmit } = useForm(submit, initialState);\n\n  /**\n   * Handles the clicking of the submit button and sends a post request to the url:\n   * http://localhost:8080/account/addUser\n   */\n  function submit() {\n    const {\n      firstName,\n      lastName,\n      password,\n      password_confirmation,\n      username,\n      dateOfBirth,\n      bio,\n      location,\n      profilePhotoUrl\n    } = values;\n\n    if (password !== password_confirmation) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    fetch(addUserURL, {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'text/plain',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"password\": password,\n        \"username\": username,\n        \"dateOfBirth\": dateOfBirth,\n        \"bio\": bio,\n        \"location\": location,\n        \"profilePhotoUrl\": profilePhotoUrl\n      })\n    }).then(response => {\n      console.log(\"registration response:\", response);\n      switch(response.status) {\n        case 200:\n            alert(\"Profile Created!\");\n            break;\n        case 409:\n          alert(\"User with that username already exists.\");\n          break;\n        default:\n          alert(\"Something went wrong creating the user.\");\n      }\n    }).catch(err => {\n      alert(\"Error sending the request. \", err);\n    });\n  }\n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid \n        container \n        component=\"main\" \n        className={classes.root} \n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <CssBaseline />\n        <Grid\n          item\n          xs={4}\n          style={{ textAlign: \"center\" }}\n          component={Paper}\n          elevation={0}\n          square>\n          <div className={classes.paper}>\n            <img\n              src={Fanlinclogo}\n              height=\"70\"\n              width=\"70\"\n              alt=\"Fanlinc logo\"\n            />\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign Up!\n          </Typography>\n            <form\n              className={classes.form}\n              noValidate\n              onSubmit={handleSubmit}\n            >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"First Name\"\n                name=\"firstName\"\n                value={values.firstName}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={values.lastName}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"username\"\n                name=\"username\"\n                value={values.username}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                value={values.password}\n                onChange={handleChange}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Confirm Password\"\n                name=\"password_confirmation\"\n                type=\"password\"\n                value={values.password_confirmation}\n                onChange={handleChange}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n                color=\"primary\"\n              >\n                Sign Up\n            </Button>\n              <Grid container>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\">\n                    {\"Have an account? Login\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}